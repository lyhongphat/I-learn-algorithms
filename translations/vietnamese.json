{
	"page_title": "Tôi Học Giải Thuật",
	"categories": "Danh Mục Giải Thuật",
	"select_category": "Chọn danh mục:",

	"arrays_hashing": "Mảng & Băm",
	"two_pointers": "Hai Con Trỏ",
	"stack": "Ngăn Xếp",
	"stack_desc": "Ngăn xếp là cấu trúc dữ liệu cơ bản theo nguyên tắc Vào-Sau-Ra-Trước (LIFO).\n\n**Các Thao Tác Chính:**\n- Push: Thêm phần tử vào đỉnh (O(1))\n- Pop: Lấy phần tử khỏi đỉnh (O(1))\n- Peek/Top: Xem phần tử ở đỉnh (O(1))\n- IsEmpty: Kiểm tra ngăn xếp rỗng (O(1))\n\n**Ứng Dụng Phổ Biến:**\n- Đánh giá biểu thức và phân tích cú pháp\n- Thao tác Hoàn tác/Làm lại\n- Điều hướng lịch sử trình duyệt\n- Quản lý lời gọi hàm\n- Cài đặt DFS (Tìm kiếm theo chiều sâu)\n\n**Ví Dụ Thực Tế:**\n- Chức năng nút back trình duyệt\n- Cơ chế hoàn tác trong trình soạn thảo\n- Kiểm tra cú pháp trong trình biên dịch\n- Các phép tính máy tính\n\n**Lưu Ý Cài Đặt:**\n- Sử dụng mảng hoặc danh sách liên kết làm cấu trúc nền\n- Xử lý tràn và cạn ngăn xếp\n- Cân nhắc giới hạn bộ nhớ\n- Theo dõi kích thước ngăn xếp",
	"binary_search": "Tìm Kiếm Nhị Phân",
	"sliding_window": "Cửa Sổ Trượt",
	"linked_list": "Danh Sách Liên Kết",
	"trees": "Cây",
	"tries": "Cây Tiền Tố",
	"heap": "Đống / Hàng Đợi Ưu Tiên",
	"backtracking": "Quay Lui",
	"graphs": "Đồ Thị",
	"advanced_graphs": "Đồ Thị Nâng Cao",
	"dp_1d": "Quy Hoạch Động 1 Chiều",
	"dp_2d": "Quy Hoạch Động 2 Chiều",
	"greedy": "Tham Lam",
	"intervals": "Khoảng",
	"math_geometry": "Toán & Hình Học",
	"bit_manipulation": "Thao Tác Bit",
	"two_pointers_desc": "Kỹ thuật hai con trỏ sử dụng hai tham chiếu để duyệt qua mảng hoặc chuỗi một cách hiệu quả.\n\n**Khái Niệm Chính:**\n- Hai con trỏ di chuyển cùng chiều hoặc ngược chiều\n- Thường hoạt động với mảng đã sắp xếp\n- Giảm độ phức tạp thời gian từ O(n²) xuống O(n)\n\n**Ứng Dụng Phổ Biến:**\n- Tìm cặp phần tử trong mảng đã sắp xếp (ví dụ: Two Sum)\n- Phát hiện chu trình trong danh sách liên kết\n- Kiểm tra chuỗi đối xứng\n- Bài toán container chứa nước tối đa\n- Xóa phần tử trùng lặp từ mảng đã sắp xếp\n- Trộn các mảng đã sắp xếp\n\n**Biến Thể:**\n- Con trỏ nhanh và chậm\n- Con trỏ đầu và cuối\n- Nhiều con trỏ cho 3Sum, 4Sum\n\n**Mẹo:**\n- Xem xét sắp xếp mảng trước\n- Chú ý các trường hợp đặc biệt (mảng rỗng, phần tử đơn)\n- Xử lý cẩn thận các phần tử trùng lặp",
	"arrays_hashing_desc": "Mảng và băm là các cấu trúc dữ liệu và kỹ thuật cơ bản trong khoa học máy tính.\n\n**Mảng:**\n- Tập hợp các phần tử được lưu trữ tại các vị trí bộ nhớ liền kề\n- Truy cập phần tử với thời gian không đổi bằng chỉ số\n- Kích thước cố định trong hầu hết các ngôn ngữ lập trình\n\n**Băm:**\n- Kỹ thuật ánh xạ dữ liệu thành các giá trị có kích thước cố định\n- Sử dụng trong bảng băm cho tìm kiếm với độ phức tạp O(1)\n- Triển khai phổ biến: HashSet, HashMap/Dictionary",
	"binary_search_desc": "Tìm kiếm nhị phân là thuật toán tìm kiếm giá trị mục tiêu trong mảng đã sắp xếp.\n\n**Đặc điểm:**\n- Độ phức tạp thời gian O(log n)\n- Yêu cầu đầu vào đã sắp xếp\n- Chia đôi khoảng tìm kiếm\n\n**Ứng dụng:**\n- Tìm kiếm phần tử trong mảng đã sắp xếp\n- Tìm căn số\n- Bài toán tối ưu",
	"sliding_window_desc": "Kỹ thuật cửa sổ trượt được sử dụng để giải quyết các bài toán về mảng/chuỗi một cách hiệu quả.\n\n**Các loại:**\n- Cửa sổ kích thước cố định\n- Cửa sổ kích thước thay đổi\n\n**Ứng dụng:**\n- Tổng mảng con lớn nhất\n- Chuỗi con dài nhất với k ký tự khác nhau\n- Tìm hoán vị trong chuỗi",
	"linked_list_desc": "Danh sách liên kết là cấu trúc dữ liệu tuyến tính trong đó các phần tử được lưu trữ trong các nút.\n\n**Các loại:**\n- Danh sách liên kết đơn\n- Danh sách liên kết đôi\n- Danh sách liên kết vòng\n\n**Các thao tác cơ bản:**\n- Chèn\n- Xóa\n- Duyệt\n- Đảo ngược",
	"trees_desc": "Cây là cấu trúc dữ liệu phân cấp với nút gốc và các nút con.\n\n**Các loại:**\n- Cây nhị phân\n- Cây nhị phân tìm kiếm (BST)\n- Cây AVL\n- Cây đỏ-đen\n\n**Các thao tác cơ bản:**\n- Chèn\n- Xóa\n- Duyệt (Trung tự, Tiền tự, Hậu tự)\n- Tìm kiếm",
	"tries_desc": "Trie là cấu trúc dữ liệu dạng cây để lưu trữ chuỗi, hữu ích cho các thao tác dựa trên tiền tố.\n\n**Đặc điểm:**\n- Mỗi nút đại diện cho một ký tự\n- Đường đi từ gốc đại diện cho chuỗi\n- Thao tác tiền tố hiệu quả\n\n**Ứng dụng:**\n- Gợi ý tự động\n- Kiểm tra chính tả\n- Bảng định tuyến IP",
	"heap_desc": "Đống là cây nhị phân hoàn chỉnh thỏa mãn tính chất đống.\n\n**Các loại:**\n- Đống nhỏ nhất\n- Đống lớn nhất\n\n**Ứng dụng:**\n- Lập lịch ưu tiên\n- Thuật toán Dijkstra\n- Tìm trung vị\n- Trộn K mảng đã sắp xếp",
	"backtracking_desc": "Quay lui là kỹ thuật giải thuật giải quyết bài toán đệ quy bằng cách thử các giải pháp khác nhau.\n\n**Đặc điểm:**\n- Xây dựng giải pháp từng bước\n- Loại bỏ giải pháp không thỏa mãn ràng buộc\n\n**Bài toán kinh điển:**\n- N quân hậu\n- Giải Sudoku\n- Tổng các tập con\n- Tìm kiếm từ",
	"graphs_desc": "Đồ thị biểu diễn mối quan hệ giữa các đối tượng bằng đỉnh và cạnh.\n\n**Biểu diễn:**\n- Ma trận kề\n- Danh sách kề\n\n**Thuật toán phổ biến:**\n- BFS (Tìm kiếm theo chiều rộng)\n- DFS (Tìm kiếm theo chiều sâu)\n- Đường đi ngắn nhất\n- Cây khung nhỏ nhất",
	"advanced_graphs_desc": "Thuật toán đồ thị nâng cao giải quyết các bài toán đồ thị phức tạp.\n\n**Thuật toán:**\n- Thuật toán Dijkstra\n- Thuật toán Bellman-Ford\n- Thuật toán Floyd-Warshall\n- Thuật toán Kruskal\n- Thuật toán Prim\n\n**Ứng dụng:**\n- Định tuyến mạng\n- Mạng xã hội\n- Lý thuyết trò chơi",
	"dp_1d_desc": "Quy hoạch động 1 chiều giải quyết bài toán bằng cách chia thành các bài toán con đơn giản hơn.\n\n**Đặc điểm:**\n- Cấu trúc tối ưu\n- Bài toán con chồng chéo\n\n**Bài toán kinh điển:**\n- Dãy Fibonacci\n- Leo cầu thang\n- Trộm nhà\n- Dãy con tăng dài nhất",
	"dp_2d_desc": "Quy hoạch động 2 chiều sử dụng mảng hai chiều để lưu trữ kết quả của các bài toán con.\n\n**Bài toán kinh điển:**\n- Dãy con chung dài nhất\n- Nhân chuỗi ma trận\n- Khoảng cách sửa đổi\n- Đường đi duy nhất",
	"greedy_desc": "Thuật toán tham lam đưa ra lựa chọn tối ưu cục bộ ở mỗi bước.\n\n**Đặc điểm:**\n- Chọn giải pháp tốt nhất tại thời điểm hiện tại\n- Có thể không dẫn đến giải pháp tối ưu toàn cục\n\n**Bài toán phổ biến:**\n- Chọn hoạt động\n- Mã hóa Huffman\n- Bài toán cái túi phân số\n- Đổi tiền tối thiểu",
	"intervals_desc": "Bài toán khoảng liên quan đến các đoạn hoặc khoảng thời gian với điểm đầu và điểm cuối.\n\n**Các thao tác cơ bản:**\n- Gộp các khoảng\n- Tìm giao nhau\n- Lập lịch\n\n**Ứng dụng:**\n- Lập lịch phòng họp\n- Lập lịch công việc\n- Phân bổ tài nguyên",
	"math_geometry_desc": "Thuật toán toán học và hình học giải quyết các bài toán số học và không gian.\n\n**Chủ đề:**\n- Số nguyên tố\n- UCLN/BCNN\n- Tính toán hình học\n- Phép toán vector\n\n**Ứng dụng:**\n- Hình học tính toán\n- Đồ họa máy tính\n- Mô hình hóa toán học",
	"bit_manipulation_desc": "Thao tác bit liên quan đến các phép toán ở mức bit.\n\n**Các phép toán cơ bản:**\n- AND, OR, XOR\n- Dịch bit\n- Đặt/xóa bit\n\n**Ứng dụng:**\n- Tối ưu hóa\n- Nén dữ liệu\n- Phát hiện và sửa lỗi"
}
